# Generated by Django 5.2 on 2025-04-11 22:40

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('applications', '0003_initial'),
        ('jobs', '0004_ahppriority'),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CandidateData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raw_data', models.JSONField(help_text='Raw extracted data from the CV')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('years_experience', models.CharField(blank=True, max_length=100, null=True)),
                ('business_unit_flexibility', models.FloatField(default=0)),
                ('past_experience', models.FloatField(default=0)),
                ('education_level', models.FloatField(default=0)),
                ('language_skills', models.FloatField(default=0)),
                ('strategic_thinking', models.FloatField(default=0)),
                ('communication_skills', models.FloatField(default=0)),
                ('computer_skills', models.FloatField(default=0)),
                ('custom_criteria_scores', models.JSONField(blank=True, default=dict)),
                ('final_score', models.FloatField(default=0)),
                ('ahp_rank', models.IntegerField(default=0)),
                ('is_selected', models.BooleanField(default=False, help_text='Indicates if the candidate has been selected for the position')),
                ('selection_date', models.DateTimeField(blank=True, help_text='When the candidate was selected', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('application', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_data', to='applications.application')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_data', to='jobs.job')),
                ('jobseeker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_data', to='users.jobseeker')),
            ],
            options={
                'ordering': ['-final_score'],
            },
        ),
    ]
